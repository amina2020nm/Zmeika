это класс
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading;

namespace Game_Coincidence
{
    class Class1
    {
        public bool gameOver = false;
        int schet = 0;
        int x;
        int y;
        int celX, celY;
        const int S = 20;
        const int V = 20;
        int[] hvostX = new int[1000];
        int[] hvostY = new int[1000];
        int nomerhv;
        Random R = new Random();
        ConsoleKeyInfo knopki;
        public bool Setup(bool gameOver)// Заданые переменные 
        {
            gameOver = false;
            x = S / 2 - 1;
            y = V / 2 - 1;
            celX = R.Next(1, 15);
            celY = R.Next(1, 15);
            Console.WriteLine();
            return gameOver;
        }
        public void Draw()// Карта и персонажи
        {
            Console.WriteLine();
            Console.SetCursorPosition(0, 0);
            Console.WriteLine("W - Вверх");
            Console.WriteLine("S - Вниз");
            Console.WriteLine("D - Вправо");
            Console.WriteLine("A - Влево");
            for (int i = 0; i < V + 1; i++)
            Console.Write("#");
            Console.WriteLine();

            for (int i = 0; i < S; i++)
            {
                for (int j = 0; j < S; j++)
                {
                    if (j == 0 || j == S - 1)
                        Console.Write("#");
                    if (i == y && j == x )
                        Console.Write("O");
                    else if (i == celY && j == celX)
                        Console.Write("F");
                    else
                    {
                        bool print = false;

                        for (int k = 0; k < nomerhv; k++)
                        {
                            if (hvostX[k] == j && hvostY[k] == i)
                            {
                                print = true;
                                Console.Write("o");
                            }
                        }
                        if (!print)
                            Console.Write(" ");
                    }
                }
                Console.WriteLine();
            }

            for (int j = 0; j < S + 1; j++)
            Console.Write("#");
            Console.WriteLine();
            Console.WriteLine();
            Console.WriteLine("Количество баллов: " + schet);
            Console.WriteLine();
            Console.WriteLine("Задача игры: Вы должны съесть как можно много фрукта 'F'");
            Console.WriteLine("Выше отображается количество баллов, за каждый съеданный фрукт +10 балла");
        }
        public void Input_Logic()
        {
            int predznX = hvostX[0];
            int predznY = hvostY[0];
            int pred2X;
            int pred2Y;
            hvostX[0] = x;
            hvostY[0] = y;
            for (int i = 1; i < nomerhv; i++)
            {
                pred2X = hvostX[i];
                pred2Y = hvostY[i];
                hvostX[i] = predznX;
                hvostY[i] = predznY;
                predznX = pred2X;
                predznY = pred2Y;
            }
        }
        public void dvigenie()
        {
            if (Console.KeyAvailable == true)
            { knopki = Console.ReadKey(true); }          
            switch (knopki.Key)
            {
                case ConsoleKey.W:
                    y--;
                    break;

                case ConsoleKey.S:
                    y++;
                    break;

                case ConsoleKey.D:
                    x++;
                    break;

                case ConsoleKey.A:
                    x--;
                    break;
            }
        }
        public void itog()
        { 
            if (x > S)
                x = 0;
            else if (x < 0)
                x = S - 2;
            if (y > V)
                y = 0;
            else if (y < 0)
                y = V - 2;
            for (int g = 0; g < nomerhv; g++)
            {
                if (hvostX[g] == x && hvostY[g] == y)
                {
                    gameOver = true;
                    Console.WriteLine("                             Вы проиграли!!!");
                    Console.WriteLine("Если хотите повторить попытку нажмите 'B'");
                }              
            }
            if (gameOver != false)
            {
                char RESTART = Convert.ToChar(Console.ReadLine());
                if (RESTART == 'B' || RESTART == 'b' || RESTART == 'И' || RESTART == 'и')
                {
                    Class1 class1 = new Class1();
                    class1.Setup(class1.gameOver);
                    while (!class1.gameOver)
                    {
                        class1.Draw();
                        class1.Input_Logic();
                        class1.dvigenie();
                        class1.itog();
                        Thread.Sleep(100);
                    }
                    Console.ReadKey();
                }
            }
            if (x == celX && y == celY)
            {
                schet += 10;
                celX = R.Next(5, 17);
                celY = R.Next(5, 17);
                nomerhv++;
            }
        }    
    }
}






using System;
using System.Threading;

namespace Game_Coincidence
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.ForegroundColor = ConsoleColor.Red;
            Class1 class1 = new Class1();
            class1.Setup(class1.gameOver);
            while (!class1.gameOver)
            {              
                class1.Draw();
                class1.Input_Logic();
                class1.dvigenie();
                class1.itog();               
                Thread.Sleep(100);
            }
            Console.ReadKey();
        }
    }
}




